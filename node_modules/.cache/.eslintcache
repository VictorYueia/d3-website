[{"/Users/yinjia/Desktop/react-d3/d3-website/src/index.js":"1","/Users/yinjia/Desktop/react-d3/d3-website/src/App.js":"2","/Users/yinjia/Desktop/react-d3/d3-website/src/reportWebVitals.js":"3","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page1/index.js":"4","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page4/index.js":"5","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page3/index.js":"6","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page2/index.js":"7","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page5/index.js":"8","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page1/PM25PieChart.js":"9","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page2/CoMap.js":"10","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page1/AqiMap.js":"11","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page3/OZoneChart.js":"12","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page4/NO2PieChart.js":"13","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page5/AtMap.js":"14","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page5/AtAqiChart.js":"15","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page2/PM25Chart.js":"16"},{"size":535,"mtime":1698150070386,"results":"17","hashOfConfig":"18"},{"size":828,"mtime":1698233690538,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1698145776149,"results":"20","hashOfConfig":"18"},{"size":1041,"mtime":1698511407870,"results":"21","hashOfConfig":"18"},{"size":781,"mtime":1698408716684,"results":"22","hashOfConfig":"18"},{"size":780,"mtime":1698408152779,"results":"23","hashOfConfig":"18"},{"size":1100,"mtime":1698511407870,"results":"24","hashOfConfig":"18"},{"size":1172,"mtime":1698410689702,"results":"25","hashOfConfig":"18"},{"size":2815,"mtime":1698511407869,"results":"26","hashOfConfig":"18"},{"size":2835,"mtime":1698407831432,"results":"27","hashOfConfig":"18"},{"size":2832,"mtime":1698407512278,"results":"28","hashOfConfig":"18"},{"size":1805,"mtime":1698408279002,"results":"29","hashOfConfig":"18"},{"size":2106,"mtime":1698408850962,"results":"30","hashOfConfig":"18"},{"size":2606,"mtime":1698410466834,"results":"31","hashOfConfig":"18"},{"size":5718,"mtime":1698411097196,"results":"32","hashOfConfig":"18"},{"size":1802,"mtime":1698511407870,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"13r7lew",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"37"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yinjia/Desktop/react-d3/d3-website/src/index.js",[],[],["88"],"/Users/yinjia/Desktop/react-d3/d3-website/src/App.js",["89","90"],[],"import * as d3 from \"d3\";\nimport { useState } from \"react\";\n// import LinePlot from \"./components/page1\";\nimport PageOne from \"./components/page1\";\nimport PageTwo from \"./components/page2\";\nimport PageThree from \"./components/page3\";\nimport PageFour from \"./components/page4\";\nimport PageFive from \"./components/page5\";\n\nimport ReactFullpage from \"@fullpage/react-fullpage\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <ReactFullpage\n      scrollOverflow={true}\n      scrollingSpeed={1000} /* Options here */\n      render={({ state, fullpageApi }) => {\n        return (\n          <ReactFullpage.Wrapper>\n            <PageOne />\n            <PageTwo />\n            <PageThree />\n            <PageFour />\n            <PageFive />\n          </ReactFullpage.Wrapper>\n        );\n      }}\n    />\n  );\n}\n\nexport default App;\n","/Users/yinjia/Desktop/react-d3/d3-website/src/reportWebVitals.js",[],[],"/Users/yinjia/Desktop/react-d3/d3-website/src/components/page1/index.js",[],[],"/Users/yinjia/Desktop/react-d3/d3-website/src/components/page4/index.js",[],[],"/Users/yinjia/Desktop/react-d3/d3-website/src/components/page3/index.js",["91"],[],"import React, { useState } from \"react\";\nimport OZoneChart from \"./OZoneChart\";\nimport \"../index.css\";\n\nconst PageThree = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <div className=\"left-side\" style={{ backgroundColor: \"#FFD93D\" }}>\n          <p>Oceans of data, vast, reveal the seas’ sad plea</p>\n          <p>Life reduced to points, in a digital decree</p>\n          <p>Fishermen's logs, once full, now echo decline</p>\n          <p className=\"clickable_text\">\n            Ozone’s tale told by indices, in data they align\n          </p>\n        </div>\n        <div className=\"right-side\" style={{ backgroundColor: \"#F6F1E9\" }}>\n          <OZoneChart />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageThree;\n","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page2/index.js",[],[],"/Users/yinjia/Desktop/react-d3/d3-website/src/components/page5/index.js",[],[],"/Users/yinjia/Desktop/react-d3/d3-website/src/components/page1/PM25PieChart.js",[],[],"/Users/yinjia/Desktop/react-d3/d3-website/src/components/page2/CoMap.js",["92"],[],"import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\";\nimport us from \"../Data/usa-states-10m.json\";\nimport data from \"../Data/map-co-data.json\";\n\nfunction CoMap() {\n  const ref = useRef();\n  const width = 900;\n  const height = 650;\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    svg.selectAll(\"*\").remove(); // render and update\n\n    const projection = d3\n      .geoAlbersUsa()\n      .fitSize([width, height], feature(us, us.objects.states));\n\n    const path = d3.geoPath().projection(projection);\n\n    svg\n      .append(\"g\")\n      .selectAll(\"path\")\n      .data(feature(us, us.objects.states).features)\n      .join(\"path\")\n      .attr(\"d\", path)\n      .attr(\"stroke\", \"#000\")\n      .attr(\"fill\", \"#BDCDD6\");\n\n    // add city points\n    const circles = svg\n      .selectAll(\"circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"cx\", function (d) {\n        return projection(d.coordinates)?.[0];\n      })\n      .attr(\"cy\", function (d) {\n        return projection(d.coordinates)?.[1];\n      })\n      .attr(\"r\", \"5px\")\n      .attr(\"fill\", \"yellow\")\n      .attr(\"stroke\", \"black\") // Add this line to add a border color\n      .attr(\"stroke-width\", \"1px\"); // Add this line to define the border width\n\n    // add city names\n    svg\n      .selectAll(\".city-label\")\n      .data(data)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"city-label\")\n      .style(\"visibility\", \"hidden\") // Make the labels initially invisible\n      .attr(\"x\", function (d) {\n        return projection(d.coordinates)[0] - 35;\n      })\n      .attr(\"y\", function (d) {\n        return projection(d.coordinates)[1];\n      })\n      .text(function (d) {\n        return d.city;\n      })\n      .attr(\"font-size\", \"15px\")\n      .attr(\"font-weight\", \"bold\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", \"black\");\n\n    circles\n      .on(\"mouseover\", function (event, d) {\n        // Show the label of the hovered circle\n        svg\n          .selectAll(\".city-label\")\n          .filter(function (d2) {\n            return d2 === d;\n          })\n          .style(\"visibility\", \"visible\");\n      })\n      .on(\"mouseout\", function (event, d) {\n        // Hide the label when not hovering\n        svg\n          .selectAll(\".city-label\")\n          .filter(function (d2) {\n            return d2 === d;\n          })\n          .style(\"visibility\", \"hidden\");\n      });\n\n    svg\n      .append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", height - 10)\n      .style(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"18px\")\n      .style(\"font-weight\", \"bolder\")\n      .text(\"Chart3: Top 10 cities with the highest CO AQI value in USA\");\n  }, [data]);\n\n  return <svg ref={ref} style={{ width: width, height: height }} />;\n}\n\nexport default CoMap;\n","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page1/AqiMap.js",["93"],[],"import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\";\nimport us from \"../Data/usa-states-10m.json\";\nimport data from \"../Data/map-aqi-data.json\";\n\nfunction AqiMap() {\n  const ref = useRef();\n  const width = 900;\n  const height = 650;\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    svg.selectAll(\"*\").remove(); // render and update\n\n    const projection = d3\n      .geoAlbersUsa()\n      .fitSize([width, height], feature(us, us.objects.states));\n\n    const path = d3.geoPath().projection(projection);\n\n    svg\n      .append(\"g\")\n      .selectAll(\"path\")\n      .data(feature(us, us.objects.states).features)\n      .join(\"path\")\n      .attr(\"d\", path)\n      .attr(\"stroke\", \"#000\")\n      .attr(\"fill\", \"#BDCDD6\");\n\n    // add city points\n    const circles = svg\n      .selectAll(\"circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"cx\", function (d) {\n        return projection(d.coordinates)?.[0];\n      })\n      .attr(\"cy\", function (d) {\n        return projection(d.coordinates)?.[1];\n      })\n      .attr(\"r\", \"5px\")\n      .attr(\"fill\", \"red\")\n      .attr(\"stroke\", \"black\") // Add this line to add a border color\n      .attr(\"stroke-width\", \"1px\"); // Add this line to define the border width\n\n    // add city names\n    svg\n      .selectAll(\".city-label\")\n      .data(data)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"city-label\")\n      .style(\"visibility\", \"hidden\") // Make the labels initially invisible\n      .attr(\"x\", function (d) {\n        return projection(d.coordinates)[0] - 35;\n      })\n      .attr(\"y\", function (d) {\n        return projection(d.coordinates)[1];\n      })\n      .text(function (d) {\n        return d.city;\n      })\n      .attr(\"font-size\", \"15px\")\n      .attr(\"font-weight\", \"bold\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", \"black\");\n\n    circles\n      .on(\"mouseover\", function (event, d) {\n        // Show the label of the hovered circle\n        svg\n          .selectAll(\".city-label\")\n          .filter(function (d2) {\n            return d2 === d;\n          })\n          .style(\"visibility\", \"visible\");\n      })\n      .on(\"mouseout\", function (event, d) {\n        // Hide the label when not hovering\n        svg\n          .selectAll(\".city-label\")\n          .filter(function (d2) {\n            return d2 === d;\n          })\n          .style(\"visibility\", \"hidden\");\n      });\n\n    svg\n      .append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", height - 10)\n      .style(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"18px\")\n      .style(\"font-weight\", \"bolder\")\n      .text(\"Chart1: Top 10 cities with the highest AQI value in USA\");\n  }, [data]);\n\n  return <svg ref={ref} style={{ width: width, height: height }} />;\n}\n\nexport default AqiMap;\n","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page3/OZoneChart.js",[],[],"/Users/yinjia/Desktop/react-d3/d3-website/src/components/page4/NO2PieChart.js",[],[],"/Users/yinjia/Desktop/react-d3/d3-website/src/components/page5/AtMap.js",["94","95"],[],"import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\";\nimport us from \"../Data/usa-states-10m.json\";\n\nconst data = [\n  {\n    coutry: \"USA\",\n    city: \"Atlanta\",\n    coordinates: [-84.388, 33.749],\n  },\n];\n\nfunction AtMap() {\n  const ref = useRef();\n  const width = 900;\n  const height = 650;\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    svg.selectAll(\"*\").remove();\n\n    // Define a separate color scale for the states\n    const colorScale = d3\n      .scaleOrdinal()\n      .domain([\"Georgia\", \"Other\"])\n      .range([\"#FFD700\", \"#BDCDD6\"]);\n\n    const projection = d3\n      .geoAlbersUsa()\n      .fitSize([width, height], feature(us, us.objects.states));\n\n    const path = d3.geoPath().projection(projection);\n\n    svg\n      .append(\"g\")\n      .selectAll(\"path\")\n      .data(feature(us, us.objects.states).features)\n      .join(\"path\")\n      .attr(\"d\", path)\n      .attr(\"stroke\", \"#000\")\n      .attr(\"fill\", (d) => {\n        return d.properties.name === \"Georgia\"\n          ? colorScale(\"Georgia\")\n          : colorScale(\"Other\");\n      });\n\n    // Create a star symbol generator\n    const star = d3.symbol().type(d3.symbolStar).size(100);\n\n    // Add city points as star symbols\n    const stars = svg\n      .selectAll(\".star\")\n      .data(data)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"star\")\n      .attr(\"d\", star) // use the star generator to create the shape\n      .attr(\"transform\", function (d) {\n        return `translate(${projection(d.coordinates)})`;\n      })\n      .attr(\"fill\", \"red\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", \"1px\");\n\n    svg\n      .selectAll(\".city-label\")\n      .data(data)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"city-label\")\n      .style(\"visibility\", (d) => (d.city === \"Atlanta\" ? \"visible\" : \"hidden\"))\n      .attr(\"x\", function (d) {\n        return projection(d.coordinates)[0] + 40;\n      })\n      .attr(\"y\", function (d) {\n        return projection(d.coordinates)[1];\n      })\n      .text(function (d) {\n        return d.city;\n      })\n      .attr(\"font-size\", \"15px\")\n      .attr(\"font-weight\", \"bold\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", \"black\");\n\n    svg\n      .append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", height - 10)\n      .style(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"18px\")\n      .style(\"font-weight\", \"bolder\")\n      .text(\"Chart7: The location of Atlanta\");\n  }, [data]);\n\n  return <svg ref={ref} style={{ width: width, height: height }} />;\n}\n\nexport default AtMap;\n","/Users/yinjia/Desktop/react-d3/d3-website/src/components/page5/AtAqiChart.js",[],[],"/Users/yinjia/Desktop/react-d3/d3-website/src/components/page2/PM25Chart.js",[],[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":13,"nodeType":"100","messageId":"101","endLine":1,"endColumn":15},{"ruleId":"98","severity":1,"message":"102","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":18},{"ruleId":"98","severity":1,"message":"102","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":98,"column":6,"nodeType":"105","endLine":98,"endColumn":12,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"104","line":98,"column":6,"nodeType":"105","endLine":98,"endColumn":12,"suggestions":"107"},{"ruleId":"98","severity":1,"message":"108","line":52,"column":11,"nodeType":"100","messageId":"101","endLine":52,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":95,"column":6,"nodeType":"105","endLine":95,"endColumn":12,"suggestions":"109"},"no-new-object",["110"],"no-unused-vars","'d3' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'data'. Either exclude it or remove the dependency array. Outer scope values like 'data' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["111"],["112"],"'stars' is assigned a value but never used.",["113"],"no-object-constructor",{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},{"desc":"114","fix":"117"},"Update the dependencies array to be: []",{"range":"118","text":"119"},{"range":"120","text":"119"},{"range":"121","text":"119"},[2731,2737],"[]",[2727,2733],[2502,2508]]