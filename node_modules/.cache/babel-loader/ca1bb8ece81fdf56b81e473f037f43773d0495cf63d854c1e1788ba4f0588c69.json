{"ast":null,"code":"var _jsxFileName = \"/Users/yinjia/Desktop/react-d3/d3-website/src/components/page1/MapChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\";\nimport us from \"./states-10m.json\"; // 导入美国地理数据\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction USAMap() {\n  _s();\n  const ref = useRef();\n  //   const width = window.innerWidth * 0.7;\n  // const height = window.innerHeight * 0.3;\n  const width = 700;\n  const height = 500;\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    const projection = d3.geoAlbersUsa().fitSize([width, height], feature(us, us.objects.states));\n    const path = d3.geoPath().projection(projection);\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n    // 创建一个映射表，键为州名，值为AQI\n    const aqiMap = new Map(data.map(d => [d.city, d[\"CO AQI Value\"]]));\n    svg.append(\"g\").selectAll(\"path\").data(feature(us, us.objects.states).features).join(\"path\").attr(\"d\", path).attr(\"stroke\", \"#000\").attr(\"fill\", d => aqiMap.get(d.properties.name) > 3 ? \"red\" : \"gray\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: ref,\n    style: {\n      width: width,\n      height: height\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n_s(USAMap, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = USAMap;\nexport default USAMap;\nvar _c;\n$RefreshReg$(_c, \"USAMap\");","map":{"version":3,"names":["React","useEffect","useRef","d3","feature","us","data","jsxDEV","_jsxDEV","USAMap","_s","ref","width","height","svg","select","current","projection","geoAlbersUsa","fitSize","objects","states","path","geoPath","colorScale","scaleOrdinal","schemeCategory10","aqiMap","Map","map","d","city","append","selectAll","features","join","attr","get","properties","name","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yinjia/Desktop/react-d3/d3-website/src/components/page1/MapChart.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\";\nimport us from \"./states-10m.json\"; // 导入美国地理数据\nimport data from \"./data.json\";\n\nfunction USAMap() {\n  const ref = useRef();\n  //   const width = window.innerWidth * 0.7;\n  // const height = window.innerHeight * 0.3;\n  const width = 700;\n  const height = 500;\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n\n    const projection = d3\n      .geoAlbersUsa()\n      .fitSize([width, height], feature(us, us.objects.states));\n\n    const path = d3.geoPath().projection(projection);\n\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n    // 创建一个映射表，键为州名，值为AQI\n    const aqiMap = new Map(data.map((d) => [d.city, d[\"CO AQI Value\"]]));\n\n    svg\n      .append(\"g\")\n      .selectAll(\"path\")\n      .data(feature(us, us.objects.states).features)\n      .join(\"path\")\n      .attr(\"d\", path)\n      .attr(\"stroke\", \"#000\")\n      .attr(\"fill\", (d) =>\n        aqiMap.get(d.properties.name) > 3 ? \"red\" : \"gray\"\n      );\n  }, []);\n\n  return <svg ref={ref} style={{ width: width, height: height }} />;\n}\n\nexport default USAMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,EAAE,MAAM,mBAAmB,CAAC,CAAC;AACpC,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,GAAG,GAAGT,MAAM,CAAC,CAAC;EACpB;EACA;EACA,MAAMU,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAElBZ,SAAS,CAAC,MAAM;IACd,MAAMa,GAAG,GAAGX,EAAE,CAACY,MAAM,CAACJ,GAAG,CAACK,OAAO,CAAC;IAElC,MAAMC,UAAU,GAAGd,EAAE,CAClBe,YAAY,CAAC,CAAC,CACdC,OAAO,CAAC,CAACP,KAAK,EAAEC,MAAM,CAAC,EAAET,OAAO,CAACC,EAAE,EAAEA,EAAE,CAACe,OAAO,CAACC,MAAM,CAAC,CAAC;IAE3D,MAAMC,IAAI,GAAGnB,EAAE,CAACoB,OAAO,CAAC,CAAC,CAACN,UAAU,CAACA,UAAU,CAAC;IAEhD,MAAMO,UAAU,GAAGrB,EAAE,CAACsB,YAAY,CAACtB,EAAE,CAACuB,gBAAgB,CAAC;;IAEvD;IACA,MAAMC,MAAM,GAAG,IAAIC,GAAG,CAACtB,IAAI,CAACuB,GAAG,CAAEC,CAAC,IAAK,CAACA,CAAC,CAACC,IAAI,EAAED,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IAEpEhB,GAAG,CACAkB,MAAM,CAAC,GAAG,CAAC,CACXC,SAAS,CAAC,MAAM,CAAC,CACjB3B,IAAI,CAACF,OAAO,CAACC,EAAE,EAAEA,EAAE,CAACe,OAAO,CAACC,MAAM,CAAC,CAACa,QAAQ,CAAC,CAC7CC,IAAI,CAAC,MAAM,CAAC,CACZC,IAAI,CAAC,GAAG,EAAEd,IAAI,CAAC,CACfc,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CACtBA,IAAI,CAAC,MAAM,EAAGN,CAAC,IACdH,MAAM,CAACU,GAAG,CAACP,CAAC,CAACQ,UAAU,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,MAC9C,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO/B,OAAA;IAAKG,GAAG,EAAEA,GAAI;IAAC6B,KAAK,EAAE;MAAE5B,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAO;EAAE;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnE;AAAClC,EAAA,CAlCQD,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AAoCf,eAAeA,MAAM;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}